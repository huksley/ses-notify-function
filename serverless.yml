useDotenv: true
service: ses-notify

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  stage: dev
  # optional, in MB, default is 1024, min is 128
  memorySize: 128
  logRetentionInDays: 30
  # optional, in seconds, default is 6
  timeout: 30
  # optional, default is true
  versionFunctions: false
  # we don't need environment since we pack .env together with lambda and read it inside
  # environment:
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: "arn:aws:s3:::ses-notify-incoming"
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:GetObjectAcl"
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource: "arn:aws:s3:::ses-notify-incoming"
    - Effect: "Allow"
      Action: 
        - "ses:SendEmail"
        - "ses:SendRawEmail"
      Resource:
        - "arn:aws:ses:*:849707207653:identity/*"
        - "arn:aws:ses:*:849707207653:configuration-set/*"

plugins:
  - serverless-plugin-typescript

package:
  exclude:
    - "node_modules/aws-sdk/**"
    - "node_modules/aws-lambda/**"
  include:
    - ".env"

functions:
  handleS3:
    handler: src/notify.s3Handler
    events:
      - s3:
          bucket: ses-notify-incoming
          events:
            - s3:ObjectCreated:*
          existing: true
          forceDeploy: true


